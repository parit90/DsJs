function Node(data){
  this.data = data;
  this.next = null;
}

function SinglyLinkList(){
  this.head = null;
  this.tail = null;
  this.count = 0;
}

SinglyLinkList.prototype.add = function(data){
  var node = new Node(data);
  if(this.head === null || !this.head){
    this.head = node;
    this.tail = node;
  }
  else{
    this.tail.next = node;
    this.tail = node;
  }
  this.count++;
}

SinglyLinkList.prototype.print = function(){
  var current = this.head;
  while(current){
    console.log(current.data,"-> ");
    current = current.next;
  }
  
}

singlyLinkedList.prototype.insertAfter = function(data,insertData){
  var node = new Node(data);
  var current = this.head;
    
    while(current.data != data){
      
      if(current.data == data){
        current.next = node;
        node.next = current.next.next;
      }

      else{
        current = current.next;
      }
    }
}

var singlyLinkedList = new SinglyLinkList();
singlyLinkedList.print(); // => ''
singlyLinkedList.add(1);
singlyLinkedList.add(2);
singlyLinkedList.add(3);
singlyLinkedList.add(4);
singlyLinkedList.print();
singlyLinkedList.insertAfter(3,11);

